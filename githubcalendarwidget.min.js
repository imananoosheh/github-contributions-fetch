const k={0:"Jan",1:"Feb",2:"Mar",3:"Apr",4:"May",5:"Jun",6:"Jul",7:"Aug",8:"Sep",9:"Oct",10:"Nov",11:"Dec"};function r(n,o){const r=new Date;r.setDate(r.getDate()-365);const e=r.getMonth();const t=document.getElementById("calendar-component");const a=document.createElement("h1");a.textContent="GitHub Activity Calendar";t.append(a);const c=document.createElement("div");c.className="months";for(let t=0;t<13;t++){const p=document.createElement("div");p.className="month";const h=t+e>11?t+e-12:t+e;p.textContent=`${k[h]}`;c.append(p)}t.append(c);const i=document.createElement("div");i.className="calendar-wrapper";const d=document.createElement("aside");const l=["Sat","Sun","Mon","Tue","Wed","Thu","Fri"];for(let t=0;t<7;t++){const g=document.createElement("div");g.textContent=`${l[t]}`;d.append(g)}i.append(d);const s=document.createElement("div");s.id="calendar";s.innerHTML="";i.append(s);t.append(i);function u(t){if(t>=1){return"FF"}if(t<0){throw new Error("Input must be in the range of 0.00 to 1.00")}const e=Math.round(t*255);const n=e.toString(16).padStart(2,"0").toUpperCase();return n}for(let e=0;e<7;e++){for(let t=0;t<53;t++){const b=document.createElement("div");b.classList.add("day");const w=new Date;w.setDate(w.getDate()-365+(e+t*7));const y=w.toISOString().split("T")[0];const x=n.find(t=>t.t===y);if(x&&x.o>0){const v=x.o/10;b.setAttribute("style",`background-color:${o["i"]+u(v)};
					align-content: baseline;`)}b.setAttribute("date",w.toLocaleDateString("en-US",{month:"short",day:"2-digit"}));if(x){b.setAttribute("contributions",x.o);if(x.o>=10){b.textContent="*"}}const r=new Date;if(w>r){b.style.backgroundColor="transparent";b.style.border="0px"}s.appendChild(b)}}const m=`
  body{
	background-color: ${o["backgroundColor"]};
  	color: ${o["i"]};
  }
  #calendar {
    display: grid;
    /* 53 columns for each week in a year */
    grid-template-columns: repeat(53, 1rem);
    /* 7 rows for each day of the week */
    grid-template-rows: repeat(7, 1rem);
    gap: 2px;
  }
  
  .day {
    width: 1rem;
    height: 1rem;
    border: 1px solid ${o["i"]+"80"};
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    position: relative;
    background-color: rgba(0, 0, 0, 0.5);
	color: black;
	font-weight: bold;
  }
  .day:hover::after {
    content: attr(contributions) " contributions on " attr(date);
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translate(-50%, -60px);
    background-color: rgba(255, 255, 255, 0.9);
    border: 1px solid #ccc;
    padding: 5px;
    border-radius: 5px;
    white-space: nowrap;
    color: ${o["backgroundColor"]};
	font-weight: normal;
    z-index: 5;
  }
  .calendar-wrapper {
    display: flex;
    flex-direction: row;
    justify-content: center;
  }
  .calendar-wrapper aside {
    padding-right: 1rem;
    text-align: right;
    width: 2rem;
  }
  .calendar-wrapper aside div {
    width: 1rem;
    height: 1rem;
	margin-bottom: 2px;
  	line-height: 1rem;
  }
  .months {
    display: flex;
    flex-direction: row;
    justify-content: start;
    margin-left: 4rem;
  }
  .month {
    width: 4.75rem;
	text-align: left;
  }
  #calendar-component{
    margin: 3rem 0;
    font-size: 1rem;
	width: fit-content;
  }
  #calendar-component > h1{
    margin-bottom: 0.5rem;
    text-align: center;
  }
  `;const f=document.createElement("style");f.textContent=m;document.head.appendChild(f)}async function a(t){const e=await fetch(`https://nulljuju.dev/github_calendar/${t}`,{method:"GET",mode:"cors",cache:"no-cache",headers:{l:"application/json"}});const n=await e.json();if(n&&e.status===200){return n}else{console.error("Error in fetching GitHub data from server")}}async function c(t,e){try{const o=await a(t);if(!o||o.length===0){console.error("No contribution data available.");return}r(o,e)}catch(n){console.error("Error fetching contribution data:",n)}}function t(){let t=document.getElementById("calendar-component")===null?false:true;while(!t){setTimeout(()=>{t=document.getElementById("calendar-component")===null?false:true;console.log("Waiting for all HTML load...")},500)}const e=document.getElementById("calendar-component");if(e){const n=e.getAttribute("username");const o=e.getAttribute("theme-color");const r=e.getAttribute("background-color");const a={i:o===null?"#00ff00":o,backgroundColor:r===null?"#121212":r};if(n.length>0){console.log("Generating the GitHub Calendar ...");c(n,a)}else{console.error("Username was not provided!\n",`username fetched:${n}\n`)}}}t();